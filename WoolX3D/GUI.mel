global proc createWoolXMenu()
{
    if (`menu -exists WoolXMenu`)
        deleteUI WoolXMenu;

    if (!`menu -exists WoolXMenu`)
    {
        global string $gMainWindow;
        setParent $gMainWindow;

        menu -label "WoolX3D" WoolXMenu;
            menuItem -label "Create Knitted Fabric" -command GenerateFabric;
            menuItem -divider true;
			menuItem -label "Create Row Stitch Mesh" -command createSelectedRandomNodeNetwork;
			menuItem -divider true;
			
    }
}

global proc deleteWoolXMenu()
{
	
}

global proc GenerateFabric()
{
// Cool green Loop ----------------------------
circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 0.3 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
curve -p -0.65 0 -0.990 -p -0.546 0 0.963 -p -2.990 0 4.474 -p 0.062 0 6.349 -p 3.348 0 4.296 -p 0.628 0 0.893 -p 0.65 0 -1.021 - name curve1;
select - r nurbsCircle1 curve1;
extrude - ch true - rn false - po 1 - et 2 - ucp 1 - fpt 1 - upn 1 - rotation 0 - scale 1 - rsp 1 nurbsCircle1 curve1;
polySmooth  -mth 0 -sdt 2 -ovb 1 -ofb 3 -ofc 0 -ost 0 -ocr 0 -dv 1 -bnr 1 -c 1 -kb 1 -ksb 1 -khe 0 -kt 1 -kmb 1 -suv 1 -peh 0 -sl 1 -dpe 1 -ps 0.1 -ro 1 -ch 1 extrudedSurface1;
polySmooth  -mth 0 -sdt 2 -ovb 1 -ofb 3 -ofc 0 -ost 0 -ocr 0 -dv 1 -bnr 1 -c 1 -kb 1 -ksb 1 -khe 0 -kt 1 -kmb 1 -suv 1 -peh 0 -sl 1 -dpe 1 -ps 0.1 -ro 1 -ch 1 extrudedSurface1;
polyNormal -normalMode 0 -userNormalMode 0 -ch 1 extrudedSurface1;

// Red Loop 1 ----------------------------

curve -p -4.658 0 1.716 -p -2.662 0 1.655 -p -2.019 0.993 2.669 -p 0.137 -0.928 2.222 -p -0.352 -0.520 4.891 -p -0.770 0.692 3.477  -p -0.65 0 8.299 - name curve2;
extrude - ch true - rn false - po 1 - et 2 - ucp 1 - fpt 1 - upn 1 - rotation 0 - scale 1 - rsp 1 nurbsCircle1 curve2;
polySmooth  -mth 0 -sdt 2 -ovb 1 -ofb 3 -ofc 0 -ost 0 -ocr 0 -dv 1 -bnr 1 -c 1 -kb 1 -ksb 1 -khe 0 -kt 1 -kmb 1 -suv 1 -peh 0 -sl 1 -dpe 1 -ps 0.1 -ro 1 -ch 1 extrudedSurface2;
polySmooth  -mth 0 -sdt 2 -ovb 1 -ofb 3 -ofc 0 -ost 0 -ocr 0 -dv 1 -bnr 1 -c 1 -kb 1 -ksb 1 -khe 0 -kt 1 -kmb 1 -suv 1 -peh 0 -sl 1 -dpe 1 -ps 0.1 -ro 1 -ch 1 extrudedSurface2;
polyNormal -normalMode 0 -userNormalMode 0 -ch 1 extrudedSurface2;
   
// Red Loop 2 ----------------------------

curve -p 4.658 0 1.716 -p 2.662 0 1.655 -p 2.019 0.993 2.669 -p -0.137 -0.928 2.222 -p 0.352 -0.520 4.891 -p 0.770 0.692 3.477  -p 0.65 0 8.299 - name curve3;
extrude - ch true - rn false - po 1 - et 2 - ucp 1 - fpt 1 - upn 1 - rotation 0 - scale 1 - rsp 1 nurbsCircle1 curve3;
polySmooth  -mth 0 -sdt 2 -ovb 1 -ofb 3 -ofc 0 -ost 0 -ocr 0 -dv 1 -bnr 1 -c 1 -kb 1 -ksb 1 -khe 0 -kt 1 -kmb 1 -suv 1 -peh 0 -sl 1 -dpe 1 -ps 0.1 -ro 1 -ch 1 extrudedSurface3;
polySmooth  -mth 0 -sdt 2 -ovb 1 -ofb 3 -ofc 0 -ost 0 -ocr 0 -dv 1 -bnr 1 -c 1 -kb 1 -ksb 1 -khe 0 -kt 1 -kmb 1 -suv 1 -peh 0 -sl 1 -dpe 1 -ps 0.1 -ro 1 -ch 1 extrudedSurface3;
polyNormal -normalMode 0 -userNormalMode 0 -ch 1 extrudedSurface3;

// Select all created objects

select -r nurbsCircle1 curve1 extrudedSurface1 curve2 extrudedSurface2 curve3 extrudedSurface3 ;

// Group

group -name Knit;

//Delete History
DeleteHistory;

//Setting the scale and centering
setAttr "Knit.scaleX" 0.108;
setAttr "Knit.scaleY" 0.108;
setAttr "Knit.scaleZ" 0.108;
setAttr "Knit.translateZ" -3.755;

//Reset transformation
select -r Knit ;
makeIdentity -apply true -t 1 -r 1 -s 1 -n 0 -pn 1;

 
}

global proc createSelectedRandomNodeNetwork()
{

	instancer;
	string  $sceneObjects[];
	$sceneObjects = `ls -selection -tail 1`;
	$selObject = $sceneObjects[0];
    createNode randomNode;
	connectAttr($selObject + ".matrix", "instancer1.inputHierarchy[0]");
    connectAttr randomNode1.outPoints instancer1.inputPoints;  
}

global proc createlSystemInstanceNodeNetwork()
{
	polyCube; 
	instancer;
	createNode LSystemInstanceNode;
	connectAttr pCube1.matrix instancer1.inputHierarchy[0];
	connectAttr LSystemInstanceNode1.outputBranches instancer1.inputPoints;

	polySphere; 
	instancer;
	connectAttr pSphere1.matrix instancer2.inputHierarchy[0];
	connectAttr LSystemInstanceNode1.outputFlowers instancer2.inputPoints;
}

global proc createSelectedLSystemInstanceNodeNetwork()
{

}